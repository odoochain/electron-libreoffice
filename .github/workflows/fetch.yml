name: Fetch
on:
  workflow_call:
    inputs:
      runner_label:
        required: true
        type: string

jobs:
  fetch:
    continue-on-error: true # Required to stop the EC2 runner
    name: All Platforms
    runs-on:
      - self-hosted
      - ${{ inputs.runner_label }}
    outputs:
      succeeded: ${{ steps.check.outputs.check }}
    defaults:
      run:
        shell: bash
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      GOMA_START_COMPILER_PROXY: true
      GOMA_FALLBACK_ON_AUTH_FAILURE: true
    steps:
      - name: Turn off line ending conversion in git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        run: |
          rm -rf el
          git -c protocol.version=2 clone --depth=1 https://${{ github.token }}@github.com/${{ github.repository }} el
          cd el
          git config --local gc.auto 0
      - name: Generate deps hash
        id: deps_hash
        run: |
          cd el/src/electron
          node script/generate-deps-hash.js
          echo "deps_hash=$(cat .depshash-platformless)" >> $GITHUB_OUTPUT
      - name: Retrieve cache (base)
        id: cache-src-base
        uses: actions/cache/restore@v3
        with:
          path: |
            base.tzstd
            dawn-angle.tzstd
            thirdparty.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-base
          lookup-only: true
          enableCrossOsArchive: true
      - name: Retrieve cache (linux)
        id: cache-src-linux
        uses: actions/cache/restore@v3
        with:
          path: |
            linux.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-linux
          lookup-only: true
          enableCrossOsArchive: true
      - name: Retrieve cache (windows)
        id: cache-src-windows
        uses: actions/cache/restore@v3
        with:
          path: |
            windows.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-windows
          lookup-only: true
          enableCrossOsArchive: true
      - name: Check cache
        id: check_cache
        run: |
          echo "build_cache=${{ steps.cache-src-base.outputs.cache-hit != 'true' || steps.cache-src-linux.outputs.cache-hit != 'true' || steps.cache-src-windows.outputs.cache-hit != 'true' }}" >> $GITHUB_OUTPUT
      - name: Setup Node v16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Create tarballs for all platforms
        if: ${{ runner.os == 'Linux' && steps.check_cache.outputs.build_cache == 'true' }}
        run: |
          sudo apt update
          sudo apt-get install --only-upgrade curl libcurl3-gnutls libcurl4
          cd el
          scripts/prepare-cross-sync-tar.sh
          cp -rf *.tzstd "$GITHUB_WORKSPACE"
      - name: Linux - Remove RAM disk
        if: ${{ runner.os == 'Linux' && always() }}
        run: |
          sudo umount /r || true
          sudo rm -rf /r || true
      - name: Save cache (base)
        uses: actions/cache/save@v3
        if: ${{ steps.cache-src-base.outputs.cache-hit != 'true' }}
        with:
          path: |
            base.tzstd
            dawn-angle.tzstd
            thirdparty.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-base
          enableCrossOsArchive: true
      - name: Retrieve cache (linux)
        uses: actions/cache/save@v3
        if: ${{ steps.cache-src-linux.outputs.cache-hit != 'true' }}
        with:
          path: |
            linux.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-linux
          enableCrossOsArchive: true
      - name: Retrieve cache (windows)
        uses: actions/cache/save@v3
        if: ${{ steps.cache-src-windows.outputs.cache-hit != 'true' }}
        with:
          path: |
            windows.tzstd
          key: src-${{ steps.deps_hash.outputs.deps_hash }}-windows
          enableCrossOsArchive: true
      - name: The job has succeeded
        if: ${{ success() }}
        id: check
        run: echo "check=true" >> $GITHUB_OUTPUT
